{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"Internet%20des%20objets/esp32-micropython/","title":"ESP32 et MicroPython","text":""},{"location":"Internet%20des%20objets/esp32-micropython/#un-autre-titre","title":"Un autre titre","text":"<p>Un exemple de texte</p>"},{"location":"Internet%20des%20objets/D%C3%A9couverte/1.premiers-pas/","title":"Premiers pas","text":"<p>Deux vid\u00e9os pour d\u00e9couvrir la carte ESP32 et le langage micropython :</p>"},{"location":"Internet%20des%20objets/D%C3%A9couverte/2.flasher-l-esp32/","title":"Flasher l'ESP32 pour le programmer en MicroPython","text":"<p>L'objectif est de flasher le microcontr\u00f4leur de la carte et d'installer un syst\u00e8me Python adapt\u00e9 \u00e0 cette carte. Le langage Python \u00e9tant un langage interpr\u00e9t\u00e9, il ne sera pas n\u00e9cessaire de la flasher \u00e0 chaque fois. </p>"},{"location":"Internet%20des%20objets/Mise%20en%20oeuvre%20d%27un%20serveur%20web/1.%20Cr%C3%A9er%20une%20connexion%20WiFi/","title":"Cr\u00e9er une connexion WiFi avec une carte ESP32","text":""},{"location":"Internet%20des%20objets/Mise%20en%20oeuvre%20d%27un%20serveur%20web/1.%20Cr%C3%A9er%20une%20connexion%20WiFi/#1-introduction","title":"1. Introduction","text":"<p>Contrairement \u00e0 la carte Arduino Uno, ce nombreuses cartes \u00e0 microcontr\u00f4leur permettent d'\u00e9tablir une connexion WiFi. Par exemple, les cartes Espressif : ESP8266, ESP32 ou certaines cartes Raspberry comme la Pico W.</p> <p>Petit comparatif de certaines de ces cartes : </p> <p></p>"},{"location":"Internet%20des%20objets/Mise%20en%20oeuvre%20d%27un%20serveur%20web/1.%20Cr%C3%A9er%20une%20connexion%20WiFi/#2-comment-se-connecter-au-wifi","title":"2. Comment se connecter au WiFi ?","text":"<p>Il existe deux mani\u00e8res de connecter en WiFi une carte ESP32 et un client (c'est \u00e0 dire le navigateur d'un mat\u00e9riel pouvant se connecter \u00e0 ce WiFi, un ordinateur portable ou un t\u00e9l\u00e9phone, par exemple)</p> <ul> <li> <p>le mode STATION : l'ESP32 se connecte \u00e0 un WiFi existant, d\u00e9livr\u00e9 par une box, un routeur,\u2026 Tous les appareils connect\u00e9s pourront acc\u00e9der aux ressources de l'ESP32. </p> </li> <li> <p>le mode ACCESS POINT : l'ESP32 fourni elle-m\u00eame une connexion WiFi, les autres appareils se connecteront directement \u00e0 ce WiFi.  C'est ce deuxi\u00e8me mode qui va \u00eatre expliqu\u00e9 ici.</p> </li> </ul>"},{"location":"Internet%20des%20objets/Mise%20en%20oeuvre%20d%27un%20serveur%20web/1.%20Cr%C3%A9er%20une%20connexion%20WiFi/#3-creation-de-la-connexion-wifi-en-mode-access-point","title":"3. Cr\u00e9ation de la connexion WiFi (en mode \"Access Point\")","text":"<p>Note</p> <p>On consid\u00e8re que la carte ESP32 est connect\u00e9e \u00e0 l'ordinateur et que l'\u00e9diteur \"Thonny\" est d\u00e9j\u00e0 lanc\u00e9. Le choix de l'interpr\u00e9teur doit \u00eatre l'ESP32, connect\u00e9 sur le port USB (voir en bas \u00e0 droite de la fen\u00eatre Thonny).</p>"},{"location":"Internet%20des%20objets/Mise%20en%20oeuvre%20d%27un%20serveur%20web/1.%20Cr%C3%A9er%20une%20connexion%20WiFi/#31-programme-de-creation-de-la-connexion-wifi","title":"3.1. Programme de cr\u00e9ation de la connexion WiFi","text":"<p>Cette partie viendra au d\u00e9but de votre programme.</p> <ul> <li>Il est n\u00e9cessaire d'importer la biblioth\u00e8que network.</li> <li>On d\u00e9finit ensuite les identifiants de connexion (dans cette configuration, le mot de passe ne sera pas demand\u00e9).</li> </ul> <pre><code>import network\n\nssid = \"ESP32-Votre pr\u00e9nom\" #(1)\npassword = \"0123456789\"  # (2)\n\nap = network.WLAN(network.AP_IF)\nap.active(True)\nap.config(essid=ssid, password=password)\n\nwhile not ap.active():\n    pass\nprint(\"network config : \", ap.ifconfig())\n</code></pre> <ol> <li>Le SSI est le nom de votre WiFi : il doit \u00eatre diff\u00e9rent des autres. Indiquez par exemple votre pr\u00e9nom.</li> <li>Le mot de passe ne sera sans doute pas demand\u00e9 pour cet exercice.</li> </ol> <p>Lancez votre programme. Si tout s'est bien d\u00e9roul\u00e9, la console doit indiquer les informations de connexion :   </p>"}]}